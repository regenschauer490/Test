var searchData=
[
  ['back',['back',['../classsig_1_1array.html#a92f41c3537757c67616f3df9e9c4e3ac',1,'sig::array::back()'],['../classsig_1_1array.html#add136edea33abe3b078d100f7a2ea38c',1,'sig::array::back() const ']]],
  ['begin',['begin',['../classsig_1_1array.html#a902c4ff5e033f11aae1456ba8d764633',1,'sig::array::begin() noexcept'],['../classsig_1_1array.html#a8ae1d450cf8e0f28caabc4511021b9d6',1,'sig::array::begin() const noexcept'],['../namespacesig_1_1impl.html#a7b79aecaf26f3b316eeefd2b8edb6598',1,'sig::impl::begin(C &amp;&amp;c) -&gt; std::move_iterator&lt; typename RC::iterator &gt;'],['../namespacesig_1_1impl.html#a2f9d3c3c2084417bf1feb789a1dcf92e',1,'sig::impl::begin(C &amp;&amp;c) -&gt; decltype(std::begin(c))']]],
  ['binary_5foperation',['binary_operation',['../namespacesig.html#aef46d46fcfa19cf6f982cfa76b59cb13',1,'sig::binary_operation(OP &amp;&amp;func, T1 &amp;&amp;v1, T2 &amp;&amp;v2) -&gt; typename impl::remove_const_reference&lt; decltype(impl::eval(std::forward&lt; OP &gt;(func), std::forward&lt; T1 &gt;(v1), std::forward&lt; T2 &gt;(v2)))&gt;::type'],['../namespacesig.html#afe70dfe9bde4e26219c60532199b6220',1,'sig::binary_operation(OP &amp;&amp;func, C1 &amp;&amp;c1, C2 &amp;&amp;c2) -&gt; typename impl::container_traits&lt; CR1 &gt;::template rebind&lt; typename impl::remove_const_reference&lt; decltype(impl::eval(std::forward&lt; OP &gt;(func), std::declval&lt; AT1 &gt;(), std::declval&lt; AT2 &gt;()))&gt;::type &gt;'],['../namespacesig.html#a93a576cc7805287c7d80c00d80a4862c',1,'sig::binary_operation(OP &amp;&amp;func, C &amp;&amp;c, T &amp;&amp;v) -&gt; typename impl::container_traits&lt; CR &gt;::template rebind&lt; typename impl::remove_const_reference&lt; decltype(impl::eval(std::forward&lt; OP &gt;(func), std::declval&lt; ET &gt;(), v))&gt;::type &gt;'],['../namespacesig.html#afded19a25b0601f23afc985153b0c047',1,'sig::binary_operation(OP &amp;&amp;func, T &amp;&amp;v, C &amp;&amp;c) -&gt; typename impl::container_traits&lt; CR &gt;::template rebind&lt; typename impl::remove_const_reference&lt; decltype(impl::eval(std::forward&lt; OP &gt;(func), v, std::declval&lt; ET &gt;()))&gt;::type &gt;']]]
];
